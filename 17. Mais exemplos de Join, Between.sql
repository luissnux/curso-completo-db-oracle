
-- UNIÃO DA TABELA DE ALUNO COM CONTRATO, UTILIZANDO APELIDOS PARA AS COLUNAS
SELECT ALU.COD_ALUNO, ALU.NOME AS ALUNO, CON.COD_CONTRATO, CON.DATA, CON.TOTAL
FROM TALUNO ALU, TCONTRATO CON
WHERE ALU.COD_ALUNO = CON.COD_ALUNO  --CRITÉRIO UNIÃO
AND Upper(ALU.NOME) LIKE'%'          --FILTRO
ORDER BY ALU.NOME;                   --ORDENAR POR NOME

UPDATE TALUNO SET NOME = 'FRIDA'
WHERE COD_ALUNO = 5;

-----------------------------------------------------------------------------

SELECT * FROM TALUNO;
SELECT * FROM TCONTRATO;
SELECT * FROM TITEM;
SELECT * FROM TCURSO;

-- (+) MOSTRA TODAS AS LINHAS MESMO SEM TER RELAÇÃO ENTRE AS TABELAS

SELECT ALU.COD_ALUNO, ALU.NOME AS ALUNO,
              CON.COD_CONTRATO, CON.DATA, CON.TOTAL,
              ITE.COD_CURSO, CUR.NOME AS CURSO,
              ITE.VALOR
FROM TALUNO ALU, TCONTRATO CON,
            TITEM ITE, TCURSO CUR
WHERE ALU.COD_ALUNO = CON.COD_ALUNO(+) --CRITERIO DE UNIAO
AND CON.COD_CONTRATO = ITE.COD_CONTRATO(+)
AND ITE.COD_CURSO = CUR.COD_CURSO(+)
ORDER BY CON.TOTAL DESC;

INSERT INTO TALUNO VALUES (10, 'PEDRO', 'NOVO HAMBURGO',NULL,NULL,NULL,NULL);

-------------------------------------------------------------------------------

CREATE TABLE TDESCONTO(
CLASSE VARCHAR(1),
INFERIOR NUMBER(4,2),
SUPERIOR NUMBER(4,2),
PRIMARY KEY(CLASSE)
);

INSERT INTO TDESCONTO VALUES ('A', 00, 10);
INSERT INTO TDESCONTO VALUES ('B', 11, 15);
INSERT INTO TDESCONTO VALUES ('C', 16, 20);
INSERT INTO TDESCONTO VALUES ('D', 21, 25);
INSERT INTO TDESCONTO VALUES ('E', 26, 30);

SELECT * FROM TDESCONTO;

COMMIT;

-------------------------------------------------------------------------------

SELECT * FROM TCONTRATO;

UPDATE TCONTRATO SET
DESCONTO = 27
WHERE COD_CONTRATO = 6;

UPDATE TCONTRATO SET
DESCONTO = 18
WHERE COD_CONTRATO = 5;

-------------------------------------------------------------------------------
SELECT * FROM TCONTRATO;
SELECT * FROM TDESCONTO;

SELECT CON.COD_CONTRATO AS CONTRATO, CON.DESCONTO, DES.CLASSE AS DESCONTO
FROM TCONTRATO CON, TDESCONTO DES
WHERE CON.DESCONTO BETWEEN DES.INFERIOR AND DES.SUPERIOR
ORDER BY CON.COD_CONTRATO;

--MOSTRAR CURSOS VENDIDOS
SELECT CUR.COD_CURSO, CUR.NOME, ITE.COD_ITEM
FROM TCURSO CUR, TITEM ITE
WHERE CUR.COD_CURSO = ITE.COD_CURSO --IRÁ MOSTRAR APENAS A LINHAS COM RELACIONAMENTO ENTRE ITEM VENDIDOS E CURSOS

--MOSTRAR CURSOS NÃO VENDIDOS
SELECT CUR.COD_CURSO, CUR.NOME, ITE.COD_ITEM
FROM TCURSO CUR, TITEM ITE
WHERE CUR.COD_CURSO = ITE.COD_CURSO(+)
AND ITE.COD_ITEM IS NULL;

SELECT * FROM TCURSO;

INSERT INTO TCURSO VALUES(6, 'PHP', 1000, 100, NULL);
INSERT INTO TCURSO VALUES(7, 'LOGICA', 100, 20, NULL);

UPDATE TCURSO SET PRE_REQ = 7
WHERE COD_CURSO = 1;

UPDATE TCURSO SET PRE_REQ = 7
WHERE COD_CURSO = 3;

UPDATE TCURSO SET PRE_REQ = 1
WHERE COD_CURSO = 2;

UPDATE TCURSO SET PRE_REQ = 3
WHERE COD_CURSO = 4;

UPDATE TCURSO SET PRE_REQ = 7
WHERE COD_CURSO = 6;

-- SELECT DE DUAS TABELAS (A MESMA TABELA)
SELECT CURSO.NOME AS CURSO, PRE_REQ.NOME AS PRE_REQUISITO
FROM TCURSO CURSO, TCURSO PRE_REQ
WHERE CURSO.PRE_REQ = PRE_REQ.COD_CURSO(+);








